y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x +0.5,  y +0.5)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$cluster
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers)
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers)
#book:page 98.......
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=21, cex=2)
#book:page 98.......
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=23, cex=2, col=c("red", "orange", "green"))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=22, cex=4, col=c("red", "orange", "purple"))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=8, cex=4, col=c("orange", "purple", "red"))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
plotcluster(dataFrame, kmeansObj$cluster)
#points(kmeansObj$centers, pch=8, cex=4, col=c("red", "purple", "orange"))
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
plot(dataFrame, kmeansObj$cluster)
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
clusplot(dataFrame, kmeansObj$cluster)
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=8, cex=4, col=1:3)
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = 1:3, pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=8, cex=4, col=1:3)
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col ="blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
#--------------2nd part :  ----------------------------
#book:page 117.......
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=8, cex=4, col=1:3)
#------------- 3rd part  ------------------------------
# Building heatmaps from K-means solutions page: 118...
par(mfrow = c(1, 2))
image(t(dataFrame)[, nrow(dataFrame):1], yaxt = "n", main = "Original Data")
par(mfrow = c(1, 2))
image(t(dataFrame)[, nrow(dataFrame):1], yaxt = "n", main = "Original Data")
image(t(dataFrame)[, order(kmeansObj$cluster)], yaxt = "n", main = "Clustered Data")
names(kmeansObj)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=4, col =kmeansObj$cluster)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=4, col =kmeansObj$centers)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=4, col ="black")
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=3, col ="blue")
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=17, cex=3, col ="blue")
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=3, col ="black")
getwd()
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/Exploratory-data-analysis/Week3")
set.seed(1234)
x <- rnorm(12,rep(1:3, each = 4), 0.2)
y <- rnorm(12,rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col ="blue", pch = 19, cex = 2)
text(x + 0.05,y + 0.05, labels = as.character(1:12))
dataFrame<-data.frame(x=x, y=y)
kmeansObj <- kmeans(dataFrame, centers = 3)
kmeansObj$centers
kmeansObj$cluster
points(kmeansObj$centers, pch=8, cex=4, col=1:3)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1)
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1[1:3])
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1[2])
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1[1,2,3])
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1[0,1,2])
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
cols1 <- c("green","black","red")
points(kmeansObj$centers, pch=8, cex=3, col =cols1[])
plot(x, y, col =kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, pch=8, cex=3, col =c("black","red","green"))
dataMatrix <- as.matrix(rnorm(400))
str(dataMatrix)
class(dataMatrix)
image(dataMatrix)
set.seed(14)
dataMatrix <- as.matrix(rnorm(400))
str(dataMatrix)
class(dataMatrix)
image(dataMatrix)
set.seed(14)
dataMatrix <- as.matrix(rnorm(400))
str(dataMatrix)
class(dataMatrix)
nrow(dataMatrix)
heatmap(dataMatrix)
matrix(rnorm(400), nrow = 3)
matrix(rnorm(400), nrow = 10)
matrix(rnorm(400), nrow = 40)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=10)
str(dataMatrix)
class(dataMatrix)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=10)
str(dataMatrix)
class(dataMatrix)
head(dataMatrix)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=40)
str(dataMatrix)
class(dataMatrix)
head(dataMatrix)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=40)
str(dataMatrix)
class(dataMatrix)
dim(dataMatrix)
head(dataMatrix)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=40)
str(dataMatrix)
class(dataMatrix)
dim(dataMatrix)
head(dataMatrix)
image(dataMatrix)
set.seed(14)
dataMatrix <- matrix(rnorm(400),nrow=40)
str(dataMatrix)
class(dataMatrix)
dim(dataMatrix)
head(dataMatrix)
image(dataMatrix)
heatmap(dataMatrix)
str(mat)
vec <- c(1, 2, 3, 2, 5, 7)
mat <- matrix(data = vec, nrow = 2)
mat
vec <- c(1, 2, 3, 2, 5, 7)
mat <- matrix(data = vec, nrow = 2)
mat
mat[1, ] <- c(1, 2, 3)
mat[2, ] <- c(2, 5, 7)
mat
str(mat)
dim(mat)
class(mat)
svd(mat)
z<-svd(mat)
str(z)
class(z)
z[1]
z[2]
z[3]
svd
svd(mat)
scd(mat)
svd(mat)
svd(mat)[1]
svd(mat)[2]
svd(mat)[3]
zz<-svd(mat)[1]%*%svd(mat)[2]%*%svd(mat)[3]
svd(mat)[1]%*%svd(mat)[2]%*%svd(mat)[3]
svd(mat)[1]%*%svd(mat)[2]
svd(mat)[1] %*% svd(mat)[2]
u
svd(mat)[1]
d<- svd(mat)[1]
u<- svd(mat)[2]
v<- svd(mat)[3]
d
u
v
d%*%u%*%v
d %*% u %*% v
$d<- svd(mat)[1]
$d <- svd(mat)[1]
d %*% u %*% t(v)
$d <- as.matrix(svd(mat)[1])
d <- as.matrix(svd(mat)[1])
$d
u<- as.matrix(svd(mat)[2])
v<- as.matrix(svd(mat)[3])
d %*% u
$d
svd(mat)
$v
v
v <- as.matrix(v, nrow(2))
v
class(v)
svd(mat)
class(v)
class(u)
dim(u)
dim(v)
class(d)
d
dim(d)
u %*% d %*% t(v)
t(mat)
mat
M =data.frame(x = seq(1,100,1), y = seq(101,200,1), z =seq(301,400,1))
dim(M)
class(M)
D = diag(svd(M)$d)
U = svd(M)$u
V = svd(M)$v
recompose_M = U %*% D %*% t(V)
D = diag(svd(mat)$d)
U = svd(mat)$u
V = svd(mat)$v
recompose_M = U %*% D %*% t(V)
recompose_M
M
mat
recompose_M
class(recompose_M)
svd(mat)
D = diag(svd(mat)$d) #  singular vectors
U = svd(mat)$u # right singular vectors --eigenvectors
V = svd(mat)$v # left singular vectors
#Notice the original data can still be obtained using U,D and V like this:
#recompose_mat = U %*% D %*% t(V) ........
recompose_mat = U %*% D %*% t(V)
recompose_mat
prcomp(scale(mat))
pca(mat)
getwd()
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/Exploratory-data-analysis/Week3")
PCA(x)
mat[1, ] <- c(1, 2, 3)
mat[2, ] <- c(2, 5, 7)
class(mat)
#R provides a function to perform singular value decomposition.
# It's called, unsurprisingly, svd.
#svd gives a list:
#svd(mat) --> gives a list : d, u, v:
# if mat is a r * c matrix => D is a diagonal matrix r*c .......
# U is c*c ....... and V is r*r.
D = diag(svd(mat)$d) #  singular vectors
U = svd(mat)$u # right singular vectors --eigenvectors
V = svd(mat)$v # left singular vectors
#Notice the original data can still be obtained using U,D and V like this:
#recompose_mat = U %*% D %*% t(V) ........
recompose_mat = U %*% D %*% t(V)
recompose_mat
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/Exploratory-data-analysis/Week3")
mat[1, ] <- c(1, 2, 3)
mat[2, ] <- c(2, 5, 7)
class(mat)
#R provides a function to perform singular value decomposition.
# It's called, unsurprisingly, svd.
#svd gives a list:
#svd(mat) --> gives a list : d, u, v:
# if mat is a r * c matrix => D is a diagonal matrix r*c .......
# U is c*c ....... and V is r*r.
D = diag(svd(mat)$d) #  singular vectors
U = svd(mat)$u # right singular vectors --eigenvectors
V = svd(mat)$v # left singular vectors
#Notice the original data can still be obtained using U,D and V like this:
#recompose_mat = U %*% D %*% t(V) ........
recompose_mat = U %*% D %*% t(V)
recompose_mat
mat[1, ] <- c(1, 2, 3)
mat[2, ] <- c(2, 5, 7)
class(mat)
as.matrix(mat)
mat[1, ] <- c(1, 2, 3)
mat[2, ] <- c(2, 5, 7)
class(mat)
as.matrix(mat)
matrix(data = mat)
mat <- matrix()
dim(mat)
mat <- matrix(c(1,2,3,2,5,7), nrow=2, ncol=3)
mat <- matrix(c(1,2,3,2,5,7), nrow=2, ncol=3)
mat
mat <- matrix(c(1,2,2,5,3,7), nrow=2, ncol=3)
mat
#see : swirlDimensionReduc.txt line 196.......
mat <- matrix(c(1,2,2,5,3,7), nrow=2, ncol=3)
class(mat)
#R provides a function to perform singular value decomposition.
# It's called, unsurprisingly, svd.
#svd(mat) --> gives a list : d, u, v:
# if mat is a m * n matrix => D is a diagonal matrix m*n .......
# matu is n*n ....... and matv is m*m.
diag = diag(svd(mat)$d) #  singular vectors
matu = svd(mat)$u # right singular vectors --eigenvectors
matv = svd(mat)$v # left singular vectors
#Notice the original data can still be obtained using matu, diag  and matv like this:
# recompose_mat = matu %*% diag %*% t(matv) ........
recompose_mat = matu %*% diag %*% t(matv)
# verif : bellow :
recompose_mat
#So we did in fact get mat back !!! . recompose_mat = mat........
| Basically, PCA is a method to reduce a high-dimensional data set to its essential
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/Exploratory-data-analysis/Week3")
mat <- matrix(c(1,2,2,5,3,7), nrow=2, ncol=3)
mat
t(mat)
mat %*% t(mat)
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/Exploratory-data-analysis/Week3")
imat <- matrix(c(1,2,2,5,3,7), nrow=2, ncol=3)
imat.transf<-t(imat)
imat
imat.transf
dat1 <- c(3,4,5,2,1,3,6,5,4)
matrix1 <- matrix(dat1, nrow = 3, ncol = 3, byrow = TRUE)
dat2 <- c(6,7,5,4,5,8,7,6,6)
matrix2 <- matrix(dat2, nrow = 3, ncol = 3, byrow = TRUE)
matrix1 %*% matrix2
dat1 <- c(3,4,5,2,1,3,6,5,4)
matrix1 <- matrix(dat1, nrow = 3, ncol = 3, byrow = TRUE)
eigen(matrix1)
?eigen
svd(matrix1)
qr(matrix1)
solve(matrix1)
matrix1
1/0.4074074
?solve
svd(matrix1)
?scale
scaledm1<-scale(matrix1)
matrix1
scaledm1
mean(matrix1[,1])
std(matrix1[,1])
sd(matrix1[,1])
(6 -3.6667)/2.08
0.32+0.80+1.12
?svd
# Assignment preparation W2
##  required settings to standardize dates and time to en_US language:
Sys.setlocale("LC_TIME","en_US.UTF-8")
format(today, format="%B %A %Y")
library(dplyr)
library(ggplot2)
#Reproducible Research: Peer Assessment 1
##------------ first possibility : na.rm true .......................
#     Q1     Loading and preprocessing the data.
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
data<- read.csv("activity.csv")
setwd("~/Files2Synch/Dropbox-old/CourseraDataScientist/ReproductibleResearch/reportwriting-misc")
# Assignment preparation W2
##  required settings to standardize dates and time to en_US language:
Sys.setlocale("LC_TIME","en_US.UTF-8")
format(today, format="%B %A %Y")
library(dplyr)
library(ggplot2)
#Reproducible Research: Peer Assessment 1
##------------ first possibility : na.rm true .......................
#     Q1     Loading and preprocessing the data.
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
data<- read.csv("activity.csv")
str(data)
setwd("~/Github/RepData_PeerAssessment1")
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
data<- read.csv("activity.csv")
dim(data)
today
format(today, format="%B %A %Y")
Sys.Date()
today<-Sys.Date()
format(today, format="%B %A %Y")
Sys.setlocale("LC_TIME","en_US.UTF-8")
format(today, format="%B %A %Y")
